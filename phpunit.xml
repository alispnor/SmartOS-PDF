# SmartOS-PDF üöÄ

## Vis√£o Geral do Projeto

SmartOS-PDF √© uma aplica√ß√£o web desenvolvida em **PHP com o framework Laravel** que tem como principal objetivo a **gera√ß√£o din√¢mica de Ordens de Servi√ßo (OS) em formato PDF**, com base em um layout visual espec√≠fico e dados din√¢micos. O projeto foca em alta fidelidade visual, adaptabilidade a diferentes quantidades de itens e controle preciso de quebras de p√°gina para impress√£o.

## Desafio T√©cnico Abordado

Este projeto foi constru√≠do para resolver um desafio t√©cnico que exigia a reconstru√ß√£o de um formul√°rio de Ordem de Servi√ßo em PDF. Os principais crit√©rios t√©cnicos inclu√≠ram:

* **Fidelidade Visual:** O PDF gerado deve ser id√™ntico ao modelo visual fornecido (anexo no desafio original).
* **Conte√∫do Din√¢mico:** A quantidade de itens da Ordem de Servi√ßo (dados da aeronave e itens de servi√ßo de manuten√ß√£o) √© vari√°vel e pode conter at√© mais de 80 itens, com alturas de texto din√¢micas.
* **Quebra de P√°gina Precisa:**
    * Margem superior fixa de 1 cm at√© o cabe√ßalho.
    * Margem inferior m√≠nima de 1 cm.
    * Itens n√£o devem ser cortados na quebra de p√°gina.
    * O cabe√ßalho do formul√°rio deve aparecer **apenas na primeira p√°gina**.
    * As p√°ginas seguintes devem manter a margem superior de 1 cm sem o cabe√ßalho completo.

## Tecnologias Utilizadas

* **PHP 8.x**
* **Laravel Framework 10.x / 11.x** (Compat√≠vel com a vers√£o mais recente do desafio)
* **MySQL** (Para armazenamento dos dados da Ordem de Servi√ßo)
* **wkhtmltopdf**: Ferramenta de linha de comando para convers√£o de HTML para PDF.
* **Laravel Snappy**: Pacote Laravel para integra√ß√£o com `wkhtmltopdf`.
* **WSL (Windows Subsystem for Linux)**: Ambiente de desenvolvimento para executar o Ubuntu/Linux no Windows.

## Funcionalidades Chave

* **Gera√ß√£o de PDF de Alta Qualidade:** Utiliza `wkhtmltopdf` para renderizar HTML/CSS complexo em PDFs, garantindo fidelidade visual ao design original.
* **Layout Adaptativo:** O layout se ajusta automaticamente √† quantidade de itens e ao conte√∫do textual, controlando a quebra de p√°gina.
* **Cabe√ßalhos e Rodap√©s Din√¢micos:** Suporte para cabe√ßalhos que aparecem apenas na primeira p√°gina e rodap√©s com numera√ß√£o de p√°gina precisa.
* **Estrutura de C√≥digo Limpa:** O projeto segue princ√≠pios de Clean Code e SOLID (SRP, OCP, DIP) para garantir manutenibilidade e escalabilidade.

## Configura√ß√£o e Instala√ß√£o

Siga os passos abaixo para configurar e rodar o projeto em seu ambiente de desenvolvimento.

### Pr√©-requisitos

* PHP 8.x
* Composer
* MySQL Server
* WSL (Windows Subsystem for Linux) com Ubuntu (ou outra distribui√ß√£o Linux)
* `wkhtmltopdf` instalado no seu ambiente WSL.

### 1. Clonar o Reposit√≥rio

```bash
git clone [https://github.com/alispnor/SmartOS-PDF.git](https://github.com/alispnor/SmartOS-PDF.git)
cd SmartOS-PDF

### 2. Configurar o Projeto Laravel
Como o reposit√≥rio j√° existe, voc√™ precisar√° configurar a aplica√ß√£o Laravel nele.

Bash

# Instalar depend√™ncias do Composer
composer install

# Copiar o arquivo .env de exemplo
cp .env.example .env

# Gerar a chave da aplica√ß√£o
php artisan key:generate
3. Configurar o Banco de Dados (.env)
Abra o arquivo .env e configure as credenciais do seu banco de dados MySQL no WSL.

Snippet de c√≥digo

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=aero_os_gen # Ou o nome do seu banco de dados
DB_USERNAME=root         # Ou seu usu√°rio MySQL
DB_PASSWORD=             # Sua senha do MySQL
Criar o Banco de Dados:

No seu terminal WSL, acesse o cliente MySQL e crie o banco de dados:

Bash

mysql -u root -p
No prompt mysql>:

SQL

CREATE DATABASE aero_os_gen CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
exit;
4. Instalar e Configurar wkhtmltopdf no WSL
Se voc√™ ainda n√£o tem wkhtmltopdf instalado, siga estes passos. √â recomend√°vel usar o pacote wkhtmltox para melhor compatibilidade.

Desinstalar vers√µes anteriores (se houver):

Bash

sudo apt remove --purge wkhtmltopdf
sudo apt autoremove
Baixar wkhtmltox (para Ubuntu 22.04 LTS "Jammy", compat√≠vel com 24.04):
V√° para https://wkhtmltopdf.org/downloads.html, procure por "Jammy Jellyfish" (ou a vers√£o compat√≠vel com seu Ubuntu WSL) e copie o link .deb para amd64.

Bash

wget <LINK_DO_ARQUIVO_.DEB_COPIADO_DO_SITE>
# Exemplo: wget [https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.jammy_amd64.deb](https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.jammy_amd64.deb)
Instalar o pacote:

Bash

sudo apt install ./<NOME_DO_ARQUIVO_BAIXADO>.deb
Verificar o caminho do bin√°rio:

Bash

which wkhtmltopdf
# Geralmente ser√° /usr/local/bin/wkhtmltopdf ou /usr/bin/wkhtmltopdf
Configurar o caminho no .env do Laravel:

Snippet de c√≥digo

WKHTMLTOPDF_BINARY="/usr/local/bin/wkhtmltopdf" # Use o caminho exato retornado pelo 'which'
5. Instalar Laravel Snappy e Publicar Configura√ß√µes
Bash

composer require barryvdh/laravel-snappy
php artisan vendor:publish --provider="Barryvdh\Snappy\ServiceProvider"
6. Configurar o Laravel Snappy (config/snappy.php)
Abra config/snappy.php e configure a se√ß√£o pdf.

PHP

// config/snappy.php
    'pdf' => [
        'enabled' => true,
        'binary'  => env('WKHTMLTOPDF_BINARY', '/usr/bin/wkhtmltopdf'),
        'timeout' => false,
        'options' => [
            'print-media-type'         => true,
            'enable-local-file-access' => true,  # Manter true para carregar logo
            'encoding'                 => 'UTF-8',
            'no-stop-slow-scripts'     => true,
            'enable-javascript'        => true,  # Manter true se voc√™ usar JS em cabe√ßalho/rodap√©
        ],
        'keep-temp' => true, # √ötil para depurar arquivos HTML tempor√°rios
        'env'     => [
            'LANG' => env('SNAPPY_PDF_ENV_LANG', 'en_US.UTF-8'), # Para problemas de codifica√ß√£o
        ],
    ],
7. Ajustar Service Provider e Classes de Servi√ßo
Certifique-se de que seus arquivos est√£o como configurados nas instru√ß√µes da etapa final da depura√ß√£o:

app/Providers/PdfServiceProvider.php (vincula PdfGenerator a SnappyPdfGenerator).

app/Contracts/PdfGenerator.php (interface).

app/Services/Pdf/SnappyPdfGenerator.php (implementa√ß√£o de PdfGenerator, usando o Facade SnappyPdf).

app/Services/Pdf/ServiceOrderPdfService.php (orquestrador da l√≥gica de gera√ß√£o de PDF, passando op√ß√µes e HTMLs).

8. Rodar Migra√ß√µes e Seeders
Bash

php artisan migrate:fresh --seed
9. Limpar Cache e Iniciar Servidor
Bash

php artisan optimize:clear
php artisan serve
Uso
Para gerar uma Ordem de Servi√ßo em PDF, acesse a seguinte rota no seu navegador:

[http://127.0.0.1:8000/os/](http://127.0.0.1:8000/os/){id}/pdf
Substitua {id} pelo ID de uma Ordem de Servi√ßo existente no seu banco de dados (por exemplo, 1, que √© criada pelos seeders).

Depura√ß√£o e Ajustes Finos
A replica√ß√£o exata do layout √© um processo iterativo de ajuste de CSS.

Inspecionar HTML Tempor√°rio: Com keep-temp ativo, os arquivos HTML tempor√°rios ser√£o salvos em /tmp (ou no diret√≥rio configurado). Acesse-os via \\wsl.localhost\Ubuntu\tmp\ no Explorador de Arquivos do Windows e abra-os no navegador (F12) para depurar CSS e JavaScript.

Ajustar CSS: Modifique o CSS nas views Blade (especialmente pdf.partials.header.blade.php, pdf.partials.footer.blade.php e pdf.service-order.blade.php) para controlar width, height, padding, margin, font-size, line-height, border-collapse, vertical-align etc., para corresponder ao design original.

Ajustar Margens Globais: No app/Services/Pdf/ServiceOrderPdfService.php, ajuste margin-top, margin-bottom, header-spacing, footer-spacing para controlar o espa√ßo reservado para cabe√ßalhos/rodap√©s e o espa√ßamento entre eles e o corpo do documento. Me√ßa as alturas reais dos seus cabe√ßalhos/rodap√©s HTML no navegador.

Revalidar JS de Quebra de P√°gina: Para cabe√ßalhos que aparecem apenas na primeira p√°gina, o JavaScript no header.blade.php precisa ser preciso. Teste com documentos de m√∫ltiplas p√°ginas.